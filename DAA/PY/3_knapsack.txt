class Item:
    def __init__(self, value, weight):
        self.value = value
        self.weight = weight

def fractional_knapsack(items, capacity):
    # Sort items by value-to-weight ratio in descending order
    items.sort(key=lambda x: x.value / x.weight, reverse=True)
    
    total_value = 0.0  # Total value of knapsack
    for item in items:
        if capacity - item.weight >= 0:
            # If the item can be added in full
            capacity -= item.weight
            total_value += item.value
        else:
            # If the item can't be added in full, add fractional part
            fraction = capacity / item.weight
            total_value += item.value * fraction
            break  # Knapsack is full

    return total_value

# Example usage
items = [Item(40, 20), Item(100, 10),Item(50,40), Item(60, 30)]
capacity = 50
max_value = fractional_knapsack(items, capacity)
print(f"Maximum value in Knapsack = {max_value}")